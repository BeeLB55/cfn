{
    "AWSTemplateFormatVersion" : "2010-09-09",
    "Description"              : "This template creates a Single AZ remote access solution using Remote Desktop Gateway, fronted by an Elastic Load Balancer.",
    "Parameters"               : {
        "VPC" : {
            "Description" : "VPC ID",
            "Type"        : "AWS::EC2::VPC::Id"
        },
        "ElbSslCertificateName" : {
            "Description" : "The name of the SSL certificate to associate with the ELB. The certificate must have previously been loaded in AWS (via the command line).",
            "Type" : "String"
        },
        "ElbPublicSubnetIDs" : {
            "Description" : "A list of Public subnet IDs to attach to the load balancer.",
            "Type" : "List<AWS::EC2::Subnet::Id>"
        },
        "KeyPairName" : {
            "Description" : "Public/private key pairs allow you to securely connect to your instance after it launches",
            "Type"        : "AWS::EC2::KeyPair::KeyName"
        },
        "InstanceTypeRdgw" : {
            "Description" : "Amazon EC2 instance type for the Remote Desktop Gateway Instance",
            "Type"        : "String",
            "Default"     : "t2.micro",
            "AllowedValues" : [
                "t2.micro",
                "t2.small",
                "t2.medium",
                "c4.large",
                "c4.xlarge",
                "m4.large",
                "m4.xlarge"
            ]
        },
        "RdgwElbName" : {
            "Description" : "Name of the RDGW Elastic Load Balancer",
            "Type" : "String",
            "MinLength" : "1"
        },
        "RdgwUserGroup" : {
            "Description" : "Domain group of users authorized to use the RDGW",
            "Type" : "String",
            "Default" : "Domain Admins",
            "MinLength" : "1"
        },
        "DomainJoinPassword" : {
            "Description" : "Password for the domain join user. Must be at least 8 characters containing letters, numbers and symbols",
            "Type"        : "String",
            "MinLength"   : "8",
            "MaxLength"   : "32",
            "AllowedPattern" : "(?=^.{6,255}$)((?=.*\\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*",
            "NoEcho"         : "true",
            "Default"        : "Password123"
        },
        "DomainJoinUser" : {
            "Description" : "User name for the account that will join the instance to the domain",
            "Type"        : "String",
            "Default"     : "StackAdmin",
            "MinLength"   : "5",
            "MaxLength"   : "25",
            "AllowedPattern" : "[a-zA-Z0-9]*"
        },
        "DomainDNSName" : {
            "Description" : "Fully qualified domain name (FQDN) of the forest root domain e.g. example.com",
            "Type"        : "String",
            "Default"     : "example.com",
            "MinLength"   : "3",
            "MaxLength"   : "25",
            "AllowedPattern" : "[a-zA-Z0-9]+\\..+"
        },
        "DomainDNSServers" : {
            "Description" : "Comma-separated list of IP addresses of DNS Servers. Commonly the Domain Controllers. (e.g. 10.0.0.10,10.0.64.10)",
            "Type"        : "CommaDelimitedList",
            "Default"     : "10.0.0.10"
        },
        "DomainNetBIOSName" : {
            "Description" : "NetBIOS name of the domain (e.g. EXAMPLE)",
            "Type"        : "String",
            "Default"     : "EXAMPLE",
            "MinLength"   : "1",
            "MaxLength"   : "15",
            "AllowedPattern" : "[a-zA-Z0-9]+"
        },
        "RdgwPrivateSubnetID" : {
            "Description" : "Private Subnet ID where the RDGW instance will run.",
            "Type"        : "AWS::EC2::Subnet::Id"
        },
        "SecurityGroupIdDomainMember" : {
            "Description" : "ID of the security group for Active Directory domain members",
            "Type"        : "AWS::EC2::SecurityGroup::Id"
        }
    },
	"Resources" : {
    	"RdgwSecurityGroupStack" : {
	    	"Type" : "AWS::CloudFormation::Stack",
       	 	"Properties" : {
           		"TemplateURL" : "https://s3.amazonaws.com/app-chemistry/templates/ra_rdgw_security_group.element",
           	 	"Parameters" : {
					"VPC" : {"Ref" : "VPC"},
                    "UseELB" : "true"
           		}
			}
      	},	
    	"RdgwElbStack" : {
	    	"Type" : "AWS::CloudFormation::Stack",
			"DependsOn" : "RdgwSecurityGroupStack",
       	 	"Properties" : {
           		"TemplateURL" : "https://s3.amazonaws.com/app-chemistry/templates/nw_elb_public_ssl_443.element",
           	 	"Parameters" : {
					"SslCertificateName" : { "Ref" : "ElbSslCertificateName" },
					"PublicSubnetIDs" : {"Ref" : "ElbPublicSubnetIDs"},
					"SecurityGroupId" : { "Fn::GetAtt" : [ "RdgwSecurityGroupStack", "Outputs.RdgwElbSecurityGroupId" ] }
           		}
			}
      	},
    	"Rdgw1Stack" : {
	    	"Type" : "AWS::CloudFormation::Stack",
			"DependsOn" : "RdgwElbStack",
       	 	"Properties" : {
           		"TemplateURL" : "https://s3.amazonaws.com/app-chemistry/templates/ra_rdgw_private_autoscale_elb.element",
           	 	"Parameters" : {
					"CIDRVPC" : {"Ref" : "CIDRVPC"},
					"KeyPairName" : {"Ref" : "KeyPairName"},
					"InstanceTypeNAT" : {"Ref" : "InstanceTypeRdgw"},
					"RdgwElbName" : { "Fn::GetAtt" : [ "RdgwElbStack", "Outputs.LoadBalancerName" ] },
                    "RdgwUserGroup" : { "Ref" : "RdgwUserGroup" },
                    "DomainJoinPassword" : { "Ref" : "DomainJoinPassword" },
                    "DomainJoinUser" : { "Ref" : "DomainJoinUser" },
                    "DomainDNSName" : { "Ref" : "DomainDNSName" },
                    "DomainDNSServers" : { "Ref" : "DomainDNSServers" },
                    "DomainNetBIOSName" : { "Ref" : "DomainNetBIOSName" },
                    "PrivateSubnetID" : { "Ref" : "RdgwPrivateSubnetID" },
                    "SecurityGroupIdDomainMember" : { "Ref" : "SecurityGroupIdDomainMember" },
					"SecurityGroupIdRDGW" : { "Fn::GetAtt" : [ "RdgwSecurityGroupStack", "Outputs.RdgwSecurityGroupId" ] },
					"VPC" : {"Ref" : "VPC"},
           		}
			}
      	}
    },
    "Outputs" : {
        "RdgwLoadBalancerName" : {
            "Description": "Name of the RDGW Elastic Load Balancer",
            "Value": { "Fn::GetAtt" : [ "RdgwElbStack", "Outputs.LoadBalancerName" ] }
        },
        "RdgwLoadBalancerDns" : {
            "Description": "DNS name for the RDGW ELB",
            "Value": { "Fn::GetAtt" : [ "RdgwElbStack", "Outputs.LoadBalancerDns" ] }
        },
        "RdgwSecurityGroupId" : {
            "Description" : "Security Group ID for the RDGW instances",
            "Value": { "Fn::GetAtt" : [ "RdgwSecurityGroupStack", "Outputs.RdgwSecurityGroupId" ] }
        },
        "RdgwElbSecurityGroupId" : {
            "Description" : "Security Group ID for the RDGW Elastic Load Balancer"
            "Condition" : "UseELB",
            "Value": { "Fn::GetAtt" : [ "RdgwSecurityGroupStack", "Outputs.RdgwElbSecurityGroupId" ] }
        }
    }
}
